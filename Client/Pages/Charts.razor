@page "/charts"

@inject IBEVViewModel ViewModel

<h1>BEV Charts</h1>

<MediaQuery Media="@Breakpoints.XSmallDown" @bind-Matches="ViewModel.IsSmallDisplay" />

@if (ViewModel.IsSmallDisplay)
{
    <h2>Rotate to landscape to view chart</h2>
    <img src="rotate.png">
}
else
{
    @if (ViewModel.SelectedSpec.Length > 0)
    {
        <div class="row">
            <div class="col-sm">
                <RadzenDropDown Placeholder="Select spec" TValue="string" Data="@ViewModel.Specs.Select(x => new {Text=x.Text, Value=x.Value})" TextProperty="Text" ValueProperty="Value"  @bind-Value="ViewModel.SelectedSpec" />
            </div>
            <div class="col-md">
                <RadzenDropDown Placeholder="Select manufacturer" TValue="string" Data="ViewModel.ManufacturerSelections"  @bind-Value="ViewModel.SelectedManufacturer" />
            </div>
            <div class="col-sm">
                <RadzenDropDown Placeholder="Select body style" TValue="string" Data="ViewModel.BodyStyleSelections"  @bind-Value="ViewModel.SelectedBodyStyle" />
            </div>
        </div>
        <div style="@ChartStyle()">
            <RadzenChart Style="width:100%;height:100%">
                <RadzenBarSeries Data="@ViewModel.FilteredSpecs" CategoryProperty="Name" LineType="LineType.Solid" ValueProperty="Value" Title="@ViewModel.SelectedSpecName">
                    <TooltipTemplate Context="data">
                        <div>
                            <RadzenImage Path=@("assets/images/brands/" + data.Manufacturer + "-Logo.jpg") Style="width:25px;margin-right:5px" />@data.Manufacturer  @data.Name
                            <br />
                            @(ViewModel.SelectedSpecName):<strong>@ViewModel.SpecFormat(data.Value ?? 0)</strong>
                        </div>
                    </TooltipTemplate>
                    </RadzenBarSeries>
                    <RadzenValueAxis Formatter="@ViewModel.SpecFormat">
                        <RadzenGridLines Visible="true" />
                    </RadzenValueAxis>
                    <RadzenBarOptions Radius="5" />
                    <RadzenLegend Visible="false" />
</RadzenChart>
        </div>
    }
    else
    {
        <img src="assets/images/spinner.gif" style="height:64px;" />
    }
}

@code {
    string ChartStyle() => $"height:{100 + ViewModel.FilteredSpecs.Length * 40}px";

    void Change(String spec)
    {
        ViewModel.SelectedSpec = spec;

    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.OnInitialized();
    }
}
