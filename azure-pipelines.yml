# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    
- task: CmdLine@2
  inputs:
   script: |
          echo "Create command file"
          echo format ('cat Client/AppVersionInfo.cs | sed ''s/_buildNumber = \"\"/_buildNumber = \"{0}\"/'' | sed ''s/_buildId = \"\"/_buildId = \"{1}\"/'' | sed ''s/_gitHash = \"\"/_gitHash = \"{2}\"/'' >temp.cs', $(Build.BuildNumber), $(Build.BuildId), $(Build.SourceVersion) ) >command.sh 
          echo "Dump command file"
          echo $(cat command.sh)
          echo "Run the command file"
          chmod +x command.sh
          ./command.sh
          echo "Copy over the version file"
          cat temp.cs >Client/AppVersionInfo.cs
          echo "Done"
   workingDirectory: Client
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--runtime win-x64  --output $(Build.ArtifactStagingDirectory) /p:PublishProfile=$(buildConfiguration) /p:SourceRevisionId=$(Build.SourceVersion) /p:BuildId=$(Build.BuildId) /p:BuildNumber=$(Build.BuildNumber) /p:WebPublishMethod=Package'
    zipAfterPublish: true


- task: PublishBuildArtifacts@1
  displayName: 'Publishing Build Artifacts...'